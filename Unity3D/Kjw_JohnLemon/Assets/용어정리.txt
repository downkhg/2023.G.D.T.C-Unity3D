*용어정리시 내가 해본 경험을 통해 해당단어에 대해서 설명할 것!
[유니티]
하이라키:
씬:
게임:
인스펙터:
프로젝트:
게임오브젝트:
컴포넌트: 유니티에서 제공하는 기능을 게임오브젝트에 추가하는 것.
스크립트:
메시: 폴리곤 덩어리
레이아웃:
리지바디(강체): 물리에서 힘을 받는 대상.
스크립팅API: 유니티에 라이브러리를 활용하는 방법이 적혀있는 문서. <
레이어:
레거시GUI: 
오버랩:
uGUI:
앵커프리셋:
앵커:
피봇:
RectTransform:
Stretch:
캔버스:
캔버스스케일러:
스크립팅API문서: 함수를 호출하여 코드를 작성하는 방법을 적어놓은 문서.

[게임수학]
벡터:
쿼터니언:
포인트:
내각:
회전축(Asix):

[생명주기]
Awake:
Start:
Update:
FixedUpdate:
OnDestroy:

*컴포넌트 추가시에 바로 찾지말고 항목들을 하나하나 살펴보는 것을 권장.

[객체지향]
클래스: 추상화하여 대상을 나타낸것. 클래스를 이용하여 인스턴스를 만든다.
객체: 클래스를 참조하는 변수
인스턴스: 객체의 실제 사용가능한 형태로 만든것.(동적할당)
Getter/Setter(인덱서): 

[메모리]
동적할당: 메모리가 실행중에 할당되는 것.
정적할당: 메모리가 컴파일중에 할당되는 것.
메모리의구조: 이진수의 조합을 통해서 데이터를 표현하는 방법이 다름.

[컴퓨터공학]
메모리(RAM): 프로그램에서 데이터를 저장하는 공간을 만드는 곳
컴파일: 소스코드를 기계어로 변환하는 과정
실행: 프로그램되어 있는 순서대로 메모리를 적재하는 것.
라이브러리: 함수의 집합. 예) 헤더파일을 불러오는 것.
SDK: 소프트웨어 개발 도구.

[프로그래밍기초]
전역변수: 프로그램이 종료시까지 메모리가 남아 있는 것.
지역변수: 함수나 블록에 포함되어 블록이 끝날때 삭제되는 변수.
변수: 데이터를 저장하는 공간(메모리덩어리)
변수타입: 이진수가 정렬된 구조로 어떤데이터가 들어있을지 규약된 형태.
포인터: 메모리주소를 저장하는 변수.
ex) 아스키코드: 문자를 숫자를 이용하여 나타낸다.
API: 어플리케이션 프로그래밍 인터페이스(함수를 호출하는 방법)
직렬화(Serialized): 

[게임]
플렛포머게임: 사이드뷰에서 발판이 있고 뛰어 넘어갈수있는 게임.
발판이 있는 게임. 슈퍼마리오, 소닉 -> 사이드뷰

[플랫폼]
안드로이드빌드 그레들(Gardle Warapper settings):


[운영체제]
비트: 운영체제에서 최대 사용할수 있는 메모리 주소의 크기.
ex) 32운영체제 -> 사용할수 있는 RAM의 용량: 4g 2^32
64비트: 메모리의 용량이 2^64
윈도우:
맥:
유닉스:
리눅스: 커널. 우분투,붉은별...
플랫폼: 기기 ≒ 운영체제 == 플랫폼
운영체제: 기기를 운영할 때 사용(커널을 호출하여 기기를 제어)하는 소프트웨어.
드라이버: 하드웨어를 제어하기 위한 소프트웨어.
하드웨어가속: 하드웨어에 별도의 연산장치를 통해 소프트웨어 계산을 하지 않는 것.
cmd(도스에뮬레이터): 커멘트라인(텍스트)를 이용하여 함수를 호출하는 것.
Nox(안드로이드에뮬레이터): 안드로이드기기를 모방하는 프로그램.
애뮬레이터: 모방자. 다른장치를 모방하는 컴퓨터프로그램. 다른 시스템을 모방한 것.
커널: 운영체제에 핵심이 되는 컴퓨터프로그램.(≒API)
64비트 프로그램과 32비트 프로그램의 차이?
포인터: 주소값.
포인터(4): 2^32


프로그램이 실행된 비트수에 따라 최대 프로그램이 가용가능한 메모리의 범위가 다르다.
->32비트 프로그램에서는 메모리를 4기가 까지밖에 사용할수없다. 
-> -21~21억 -> 42억 -> 4g

[컴퓨터상식]
화면비율: 모니터(액정화면)의 종횡비율
해상도: 픽셀의 개수 
픽셀: 표현된 점
도트: 찍은 점 

단어의뜻을 모를때: 사전정의라도 이해할 것.
단어뜻은 이해할때: 자신의 경험에서 사전적 정의로 이해되는 것을 그대로 설명 후 정리.
전달이 잘못 되었을때: 알만한 사람을 찾아 이야기를 나누고, 자신의 정의가 맞는지 검증하기.