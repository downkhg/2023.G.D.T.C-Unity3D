[텍스트 RPG게임의 제작과 프로그래밍 문법 및 발상]
1.몬스터와 플레이어의 전투와 필드를 만든다.
a.절차지향에서 게임을 기획/분석하여 변수와 함수를 만들고, 알고리즘으로 처리한다.
b.객체지향에서 각 변수를 묶어서 객체화 한다.
c.객체화 되어 반복적으로 변수를 사용하는 알고리즘은 함수화 하여 동작화한다.
d.추상적인 개념에서 객체화는 공격밖에 없으나, 실제로 코스를 사용할때,
e.객체의 사망에 대하여 체크를 해야하므로, 사망에 대한 동작을 추가한다.
f.이는 동작이라기보다는 인터페이스에 가깝다.(사용자입장에서 내부과정을 몰라도 리턴값을 통해 문제를 파악할수있다.)
g.한클래스로 다양한 객체를 만들어 사용하면 각 객체간의 구별이 어렵다.
그러므로, 구별을 위하여 식별자(이름)을 부여한다.

2.(몬스터:Player)에서 (아이템:Item)을 드롭되고 획득할수있도록만든다.
a. 힐링포션,마나포션 중 기능을 추가적으로 구현하지않아도되는 힐링포션부터 제작한다. 
b. 힐링포션에 필요한 것? 이름,회복량,갯수(추가적으로 소모품에만 해당된다.)
c. 플레이어에 아이템슬롯을 추가하고, 아이템슬롯장착, 해재, 사용을 구현한다.
d. 몬스터가 쓰러지면 아이템을 (획득)한다. -> 몬스터의 아이템슬롯에서 플레이어의 아이템슬롯으로 뺏는다.
   ->몬스터들의 슬롯에 아이템을 추가한다 -> 몬스터를 쓰러뜨리면, 플레이어의슬롯으로 아이템을 가져온다.
e. 마을/전투시 아이템을 사용한다. 상점에서 판매한다.(가격)
   ->상점은 아이템을 여러가지 보유하고있다 -> 인벤토리가 필요하다. -> 아이템을 저장하는 가방 -> 리스트

3.마을,필드,상점를 구현한다.
a. 상점? 물건리스트 -> 인벤토리 -> 물건을 구매하면 아이템을 플레어이가 획득하고 NPC의 인벤토리에는 그대로 있다.
b. 플레이어끼리 거래도 가능하도록 만든다.

※ 추가로 어떤 기능을 구현해야할때는 우선순위를 뒤로 미루고 추가기능이 없는 부분부터 구현한다.